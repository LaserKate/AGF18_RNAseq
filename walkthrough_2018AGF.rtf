{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fnil\fcharset0 Menlo-Regular;\f2\fmodern\fcharset0 Courier-Bold;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red27\green31\blue34;\red70\green70\blue70;\red25\green28\blue31;
\red0\green0\blue0;\red29\green38\blue42;\red27\green31\blue34;\red255\green255\blue255;\red87\green96\blue106;
\red6\green33\blue79;\red203\green35\blue57;}
{\*\expandedcolortbl;;\csgenericrgb\c10588\c12157\c13333;\csgenericrgb\c27451\c27451\c27451;\csgenericrgb\c9804\c10980\c12157;
\csgray\c0;\cssrgb\c14902\c19608\c21961;\cssrgb\c14118\c16078\c18039;\cssrgb\c100000\c100000\c100000;\cssrgb\c41569\c45098\c49020;
\cssrgb\c1176\c18431\c38431;\cssrgb\c84314\c22745\c28627;}
\margl1440\margr1440\vieww13600\viewh15220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #AGF2018 \
\
#\cf2 \expnd0\expndtw0\kerning0
####################### \cf0 \kerning1\expnd0\expndtw0 Larvae \cf2 \expnd0\expndtw0\kerning0
#######################\cf0 \kerning1\expnd0\expndtw0 \
\
#extract fastq files from each folder\
mv */*.fastq.gz .\
\
#transfer files to Alabama Super Computer\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \CocoaLigature0 scp *.fastq.gz aubmes@dmc.asc.edu:/home/aubmes/Moorea/AGF/working\
\
#unzip all fastqs\
gunzip *.gz\CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
#obtain A.millepora genome from {\field{\*\fldinst{HYPERLINK "https://przeworskilab.com/data/"}}{\fldrslt \expnd0\expndtw0\kerning0
https://przeworskilab.com/data/}}\expnd0\expndtw0\kerning0
\
#obtain Misha\'92s Tagseq scripts \
\pard\pardeftab720\partightenfactor0
\cf2 git clone https://github.com/z0on/tag-based_RNAseq.git\
\
####################### concatenate fastq files by sample ID\
# making scripts executable \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 chmod u+x\
\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
for file in *.fastq; do echo "mv $\{file\} sample_$\{file\}"  >> rename; done\
#make rename into a bash script, make executable, run\
\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 ngs_concat.pl 'sample'  'sample_(.+)_L00'\
#make ngs_concat into a bash script, make executable, run\
\
####################### adaptor trimming, deduplicating, and quality filtering with Misha's script\
\
for F in *.fq; do echo "\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 tagseq_clipper.pl $F | cutadapt - -a AAAAAAAA -a AGATCGG -q 15 -m 25 -o $\{F/.fq/\}.trim" >>clean; done\
\
####################### run fastqc on trimmed samples\
\
mkdir Fastqc_Results\
echo fastqc -o fastqc/ -f fastq *.trim > runFQC\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 #extract html files from each folder\
mv */*.html .\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\
####################### count trimmed reads\
\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 countreads.pl fastq > countreadsfq.txt\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 countreads.pl trim > countreadstrim.txt\
\
####################### mapping reads to Amillepora genome using bowtie2\
\
bowtie2-build \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil.all.maker.transcripts.fasta\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil.all.maker.transcripts.fasta\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 tagseq_bowtie2map.pl "trim$" \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil.all.maker.transcripts.fasta\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  > maps\
\
grep "overall alignment rate" 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 maps.o439811 > map_efficiency.txt
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
####################### compile counts\
\
\pard\pardeftab720\sl420\partightenfactor0

\f2\b \cf3 awk '\{ print $1, $2 \}' 
\f0\b0 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amillepora_trinotate_annotation_report.xls > seq2seq.tab\cf3 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0
\cf2 #then I added the -RA bit in excel\cf4 \
\cf2 \
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 samcount_launch_bt2.pl '\\.sam' \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 seq2seq.tab\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  > sc\
\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 expression_compiler.pl *.sam.counts > AGF_larvae_2018_geneCounts.txt\
\
\
####################### tar directory\
tar -zcvf AGF_Larvae_2018_all.tar.gz 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/working
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
##########################################################################\
# AGF 2018 Larvae - get SNPs\
\
#remap to retain sam headers\
for file in *.trim; do echo "bowtie2 --local -x \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil.all.maker.transcripts.fasta\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  -U $\{file\} -S $\{file/.trim/nohead.sam\} --no-unal -k 5" >> map_nohead; done\
\
#convert to sorted, indexed bams\
samSort.py *nohead.sam > convertSort\
\
#make text file for pileup\
for file in *Sorted.bam; do echo $\{file\} >> bams.txt; done\
#remake bams.txt for only site by site crosses (purebreds)\
#bams_PB.txt\
\
# run pileup, set this up in nano as mpileup\
bcftools mpileup -b bams_PB.txt -f '\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil.all.maker.transcripts.fasta\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 ' -C 50 -o AGF_larvaeRNA_bcf.vcf -q 5 -Q 30 -Ov -I\
\
#call the SNPs, don't include indels, output as vcf file\
bcftools call -Ov -o Aten_larval_SNPs.vcf -V indels -v AGF_larvaeRNA_bcf.vcf -c\
\
#snpcall_1\
grep -v "^#" Aten_larval_SNPs.vcf |wc -l\
# this file as 
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 531,343
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
# filter for sites with at least a depth of 20\
vcfutils.pl varFilter -d 20 Aten_larval_SNPs.vcf > Aten_larval_SNPs_filtered.vcf\
\
#snpcall_2\
grep -v "^#" Aten_larval_SNPs_filtered.vcf |wc -l\
#
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 188,305
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
#further filter SNPs, change \'97max-missing to 0.5 (allowing for 0.5% of sites to be missing)\
vcftools --thin 5000 --vcf Aten_larval_SNPs_filtered.vcf --recode --out Aten_larval_SNPs_filtered_1 --max-missing 0.5 --mac 3 --minDP 10 --max-alleles 2 --maf 0.015 --remove-indels\
\
grep -v "^#" 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Aten_larval_SNPs_filtered_1.recode.vcf
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  |wc -l\
#
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 10,695
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
#run pairwise Fst to find SNP outliers for CU\
\pard\pardeftab720\partightenfactor0

\f3\fs26 \cf6 vcftools --vcf 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Aten_larval_SNPs_filtered_1.recode.vcf
\f3\fs26 \cf6 \expnd0\expndtw0\kerning0
\CocoaLigature1  --weir-fst-pop 
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 bams_CU.txt
\f3\fs26 \cf6 \expnd0\expndtw0\kerning0
\CocoaLigature1  --weir-fst-pop 
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 bams_notCU.txt
\f3\fs26 \cf6 \expnd0\expndtw0\kerning0
\CocoaLigature1  --out fst_CUvNotCU\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 vcftools --vcf Aten_larval_SNPs_filtered_1.recode.vcf --weir-fst-pop bams_CU.txt --weir-fst-pop bams_BK.txt --out fst_CUvBK\
\
vcftools --vcf Aten_larval_SNPs_filtered_1.recode.vcf --weir-fst-pop bams_CU.txt --weir-fst-pop bams_DR.txt --out fst_CUvDR\
\
vcftools --vcf Aten_larval_SNPs_filtered_1.recode.vcf --weir-fst-pop bams_CU.txt --weir-fst-pop bams_LS.txt --out fst_CUvLS\
\
vcftools --vcf Aten_larval_SNPs_filtered_1.recode.vcf --weir-fst-pop bams_CU.txt --weir-fst-pop bams_SB.txt --out fst_CUvSB
\f3\fs26 \cf6 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \
\
##### rerun SNP analysis with all samples\
#make text file for pileup\
\
for file in *Sorted.bam; do echo $\{file\} >> bams.txt; done\
#count number of bam files in .txt\
Wc -l bams.txt #96\
\
# run pileup, set this up in nano as mpileup\
bcftools mpileup -b bams.txt -f '\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil.all.maker.transcripts.fasta\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 ' -C 50 -o AGF_larvaeRNA_all_bcf.vcf -q 5 -Q 30 -Ov -I\
\
#call the SNPs, don't include indels, output as vcf file\
bcftools call -Ov -o Aten_larval_SNPs_all.vcf -V indels -v AGF_larvaeRNA_all_bcf.vcf -c\
\
#snpcall_1\
grep -v "^#" Aten_larval_SNPs_all.vcf |wc -l\
# this file as 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 661,875
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
# filter for sites with at least a depth of 20\
vcfutils.pl varFilter -d 20 Aten_larval_SNPs_all.vcf > Aten_larval_SNPs_filtered_all.vcf\
\
#snpcall_2\
grep -v "^#" Aten_larval_SNPs_filtered.vcf |wc -l\
#
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 283,848
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
#further filter SNPs, change \'97max-missing to 0.5 (allowing for 0.5% of sites to be missing)\
vcftools --thin 5000 --vcf Aten_larval_SNPs_filtered_all.vcf --recode --out Aten_larval_SNPs_filtered_all_1 --max-missing 0.5 --mac 3 --minDP 10 --max-alleles 2 --maf 0.015 --remove-indels\
\
grep -v "^#" 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Aten_larval_SNPs_filtered_all_1.recode.vcf
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  |wc -l\
#
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 13,092
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
##### rerun SNP analysis with all samples using \cf0 \kerning1\expnd0\expndtw0 angsd \cf7 \cb8 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 ####################### angsd \
\
# didn\'92t do this\
#assessing base qualities and coverage depth\
\pard\pardeftab720\partightenfactor0
\cf7 \cb8 \expnd0\expndtw0\kerning0
# -minMapQ 20 : only highly unique mappings (prob of erroneous mapping = 1%)\
# -baq 1 : realign around indels (not terribly relevant for 2bRAD reads mapped with --local option)\
# -maxDepth : highest total depth (sum over all samples) to assess; set to 10x number of samples\
\cf0 \cb1 \kerning1\expnd0\expndtw0 \
\cf7 \cb8 \expnd0\expndtw0\kerning0
FILTERS="-uniqueOnly 1 -remove_bads 1 -minMapQ 20 -maxDepth 1200"\
\cf0 \cb1 \kerning1\expnd0\expndtw0 \
\cf7 \cb8 \expnd0\expndtw0\kerning0
TODO="-doQsDist 1 -doDepth 1 -doCounts 1 -dumpCounts 2"\cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
# a long-ish contig \cf5 \CocoaLigature0 SN:scaffold7_cov100 LN:513095\
\
\cf7 \cb8 \expnd0\expndtw0\kerning0
\CocoaLigature1 # in the following line, -r argument is one chromosome or contig to work with (no need to do this for whole genome as long as the chosen chromosome or contig is long enough)\
\
angsd -b bams -r \cf5 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 scaffold7_cov100\cf7 \cb8 \expnd0\expndtw0\kerning0
\CocoaLigature1  -GL 1 $FILTERS $TODO -P 1 -out dd\
\
\
# ----- IBS with ANGSD\
\
ls *.bam > bams\
\
# F I L T E R S :\
# -snp_pval 1e-5 : high confidence that the SNP is not just sequencing error \
# -minMaf 0.05 : only common SNPs, with allele frequency 0.05 or more.\
# set minInd to 75-80% of total number of samples, 20 samples but \'93should be\'94 10 genotypes. Try with 5 first.\
# also adding  filters against very badly non-HWE sites (such as, all calls are heterozygotes => lumped paralog situation) and sites with really bad strand bias:\
FILTERS="-uniqueOnly 1 -remove_bads 1 -minMapQ 20 -minQ 25 -dosnpstat 1 -doHWE 1 -sb_pval 1e-5 -hetbias_pval 1e-5 -skipTriallelic 1 -minInd 5 -snp_pval 1e-5 -minMaf 0.05"\
\
# T O   D O :\
# -GL 1 : samtools likelihood model\
# -doGlf 2 : output beagle format (for admixture)\
# -doGeno 8 : bgenotype likelihoods format for ngsLD\
# -makeMatrix 1 -doIBS 1 -doCov 1 : identity-by-state and covariance matrices based on single-read resampling (robust to variation in coverage across samples)\
TODO="-doMajorMinor 1 -doMaf 1 -doCounts 1 -makeMatrix 1 -doIBS 1 -doCov 1 -doGeno 8 \cf5 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 -doBcf 1\cf7 \cb8 \expnd0\expndtw0\kerning0
\CocoaLigature1  -doPost 1 -doGlf 2"\
\
angsd -b bams -GL 1 $FILTERS $TODO -P 1 -out ibs05\
\
# how many SNPs?\cf0 \cb1 \kerning1\expnd0\expndtw0 \
\cf7 \cb8 \expnd0\expndtw0\kerning0
zcat ibs05.mafs.gz | wc -l\
#\cf5 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 172,434 SNPs\
\
\cf7 \cb8 \expnd0\expndtw0\kerning0
\CocoaLigature1 scp ibs05.ibsMat and bams to laptop, use step1_IBS.R to analyze\cf2 \cb1 \
\
##########################################################################\
# AGF 2018 Juveniles\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 #extract fastq files from each folder\
mv */*.fastq.gz .\cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 #transfer files to Alabama Super Computer\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \CocoaLigature0 scp *.fastq.gz aubmes@dmc.asc.edu:/home/aubmes/Moorea/AGF/working\
\
#unzip all fastqs\
gunzip *.gz\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 ####################### concatenate fastq files by sample ID\
# making scripts executable \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 chmod u+x\
\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
for file in *.fastq; do echo "mv $\{file\} sample_$\{file\}"  >> rename; done\
#make rename into a bash script, make executable, run\
\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 ngs_concat.pl 'sample'  'sample_(.+)_L00'\
#make ngs_concat into a bash script, make executable, run\
\
####################### adaptor trimming, deduplicating, and quality filtering with Misha's script\
\
for F in *.fq; do echo "\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 tagseq_clipper.pl $F | cutadapt - -a AAAAAAAA -a AGATCGG -q 15 -m 25 -o $\{F/.fq/\}.trim" >>clean; done\
\
####################### count trimmed reads\
\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 countreads.pl fq > AGF2018_juves_countreadsfq.txt\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 countreads.pl trim > AGF2018_juves_countreadstrim.txt\
\
####################### Mapping \
#combine Amil transcripts and ABCD transcripts \
cat 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil.all.maker.transcripts.fasta symABCD.fasta > Amil_symABCD.fasta
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
bowtie2-build 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil_symABCD.fasta
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil_symABCD.fasta
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 tagseq_bowtie2map.pl "trim$" \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil_symABCD.fasta
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  > maps_symall\
\
grep "overall alignment rate" 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 maps.o494697 > map_efficiency_AmilsymABCD.txt
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
#counting up reads matching up to different sym clades using Misha\'92s script \
zooxtype.pl host="
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amillepora03937-RA
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 " >zooxCounts.txt\
\
####################### removing sym mapping reads\
\
for file in *.sam; do echo grep -v -e 
\f1 chr11 -e chr12 -e chr13 -e chr14 $\{file\} \\> $\{file/.sam/.host.sam\} >> sort; done\
\

\f0 ####################### compiling counts
\f1 \
\
for file in *.host.sam; do echo 
\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/samcount.pl $\{file\} 
\f0\fs24 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 seq2seq.tab 
\f1\fs22 aligner=bowtie2 \\> 
\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 $\{file/.sam/.sam.counts\} >> counts; done\

\f0 \
\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/bin/tag-based_RNAseq/\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 expression_compiler.pl *.sam.counts > AGF_juvenile_2018_geneCounts.txt\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \
####################### get KOG annotation\
\pard\pardeftab720\sl380\partightenfactor0

\fs27\fsmilli13600 \cf9 #  KOG classes (single-letter):\cf7 \
awk -F \cf10 "\\t"\cf7  \cf10 'BEGIN \{OFS="\\t" \}\{print $1,$12 \}'\cf7  
\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amillepora_euk.emapper.annotations
\fs27\fsmilli13600 \cf7 \expnd0\expndtw0\kerning0
\CocoaLigature1  \cf11 |\cf7  grep -Ev \cf10 "[,#S]"\cf7  \cf11 >\cf7 amil_gene2kogClass1.tab\
\cf9 # converting single-letter KOG classes to text understood by KOGMWU package (must have kog_classes.txt file in the same dir):\cf7 \
awk \cf10 'BEGIN \{FS=OFS="\\t"\} NR==FNR \{a[$1] = $2;next\} \{print $1,a[$2]\}'\cf7  kog_classes.txt amil_gene2kogClass1.tab \cf11 >\cf7  Amil_gene2kogClass.tab\
\pard\pardeftab720\partightenfactor0

\fs24 \cf2 \
####################### call SNPs for Juves\
\
\pard\pardeftab720\partightenfactor0

\f0 \cf2 #remap to retain sam headers\
for file in *.trim; do echo "bowtie2 --local -x \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil_symABCD.fasta
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  -U $\{file\} -S $\{file/.trim/nohead.sam\} --no-unal -k 5" >> map_nohead; done\
\
#removing sym mapping reads\
for file in *nohead.sam; do echo grep -v -e 
\f1 chr11 -e chr12 -e chr13 -e chr14 $\{file\} \\> $\{file/.sam/.host.sam\} >> sort; done
\f0 \
\
#convert to sorted, indexed bams\
samSort.py *
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 nohead.host.sam
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  > convertSort\
\
#make text file for pileup\
for file in *
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 nohead.host_Sorted.bam
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 ; do echo $\{file\} >> bams.txt; done\
\
#count number of bam files in .txt\
wc -l bams.txt #146\
\
# run pileup, set this up in nano as mpileup\
bcftools mpileup -b bams.txt -f '\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 /home/aubmes/Moorea/AGF/genome/Amil_v2.01\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 /\cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Amil.all.maker.transcripts.fasta\cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 ' -C 50 -o AGF_juvesRNA_all_bcf.vcf -q 5 -Q 30 -Ov -I\
\
#call the SNPs, don't include indels, output as vcf file\
bcftools call -Ov -o Aten_juves_SNPs_all.vcf -V indels -v AGF_juvesRNA_all_bcf.vcf -c\
\
#snpcall_1\
grep -v "^#" Aten_juves_SNPs_all.vcf |wc -l\
# this file as 
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 701,730
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
# filter for sites with at least a depth of 20\
vcfutils.pl varFilter -d 20 Aten_juves_SNPs_all.vcf > Aten_juves_SNPs_filtered_all.vcf\
\
#snpcall_2\
grep -v "^#" Aten_juves_SNPs_filtered_all.vcf |wc -l\
#
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 302,426
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
#further filter SNPs, change \'97max-missing to 0.5 (allowing for 0.5% of sites to be missing)\
vcftools --thin 5000 --vcf Aten_juves_SNPs_filtered_all.vcf --recode --out Aten_juves_SNPs_filtered_all_1 --max-missing 0.5 --mac 3 --minDP 10 --max-alleles 2 --maf 0.015 --remove-indels\
\
grep -v "^#" 
\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 Aten_juves_SNPs_filtered_all_1.recode.vcf
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  |wc -l\
#
\f1\fs22 \cf5 \kerning1\expnd0\expndtw0 \CocoaLigature0 11,934
\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1  SNPs\
\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \
}